---
import Base from "../../../layout/Base.astro";
import { supabase } from "../../../lib/supabase";
import { ServiceEdit } from "../../../components/react/ServicesEdit";
import { ProviderForm } from "../../../components/react/ProviderForm";
import { ProviderAvailabilityPreferences } from "../../../components/react/ProviderAvailabilityPreferences";
import { availabilityPreferencesSchema } from "../../../lib/zod.schemas";

const { providerId } = Astro.params;
const providerID = Number(providerId);

const [provider, services, isAdmin] = await Promise.all([
  supabase.from("providers").select("*").limit(1).eq("id", providerID).single(),

  supabase.from("services").select("*").eq("provider_id", providerID),
  supabase.rpc("is_admin", { p_id: providerID }),
]);

if (provider.error) {
  console.error("/[providerId]/edit provider.error:", provider.error);
  return Astro.redirect(`/provider/provider-error`);
}
if (isAdmin.data === false) {
  return Astro.redirect(`/provider/${providerID}`);
}
---

<Base title={`Edit ${provider.data?.name}`}>
  <div class="grid md:grid-cols-2 sm:grid-cols-1 gap-8 w-3/4">
    <ProviderForm providerData={provider.data} client:idle />
    <ServiceEdit services={services.data} providerId={providerID} client:idle />
    <ProviderAvailabilityPreferences
      availability_preferences={availabilityPreferencesSchema.parse(
        provider.data.availability_preferences || {
          "0": [],
          "1": [],
          "2": [],
          "3": [],
          "4": [],
          "5": [],
          "6": [],
        }
      )}
      providerId={provider.data.id}
      client:idle
    />
  </div>
</Base>
